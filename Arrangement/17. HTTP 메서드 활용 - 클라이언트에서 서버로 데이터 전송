	17. HTTP 메서드 활용 - 클라이언트에서 서버로 데이터 전송
		* 쿼리 파라미터를 통한 데이터 전송
			- GET
			- 주로 정렬 필터(검색어)
		* 메시지 바딩를 통한 데이터 전송
			- POST, PUT, PATCH
			- 회원가입, 상품주문, 리소스 등록, 리소스 변경
			
		1. 정적 데이터 조회
			- 이미지, 정적 텍스트 문서
				-> 쿼리 파라미터 미사용
			
		2. 동적 데이터 조회
			- 주로 검색, 게시판 목록에서 정렬 필터(검색어)
				-> 쿼리 파라미터 사용
				* 조회 조건을 줄여주는 필터, 조회 결과를 정렬하는 정렬 조건에 주로 사용
				* 조회는 GET 사용
				* GET은 쿼리 파라미터 사용해서 데이터를 전달
				
				
		3. HTML From을 통한 데이터 전송
			- 회원가입, 상품주문, 데이터변경
				-> POST 전송: 저장
				* HTML From submit시 POST 전송
				* COntent-Type: application/x-www-form-urlencoded 사용
					> form의 내용을 메시지 바디를 통해서 전송(key=value, 쿼리 파라미터 형식)
					> 전송 데이터를 url encoding처리(abc김 -> abc%EA%B9%80)
					> HTML From은 GET 전송도 가능
					> Content-Type: Multipart/form-data
						- 파일 업로드 같은 바이너리 데이터 전송시 사용
						- 다른 종류의 여러 파일과 폼의 내용을 함꼐 전송 가능
			
		4. HTTP API를 통한 데이터 전송
			- 회원 가입, 상품 주문, 데이터 변경
			- 서버 to 서버, 앱 클라이언트, 웹 클라이언트(Ajax)
				* 서버 to 서버(백엔드 시스템 통신)
				* 앱 클라이언트
				* 웹 클라이언트
					> HTML에서 Form 전송 대신 자바 스크립트를 통한 통신에 사용(AJAX)
				* POST, PUT, PATCH: 메시지 바디를 통해 데이터 전송
				* GET: 조회, 쿼리 파라미터로 데이터 전달
				* Content-Type: application/json을 주로 사용(사실상 표준)